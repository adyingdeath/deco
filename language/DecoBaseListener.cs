//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Deco.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IDecoListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class DecoBaseListener : IDecoListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] DecoParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] DecoParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModifier([NotNull] DecoParser.ModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModifier([NotNull] DecoParser.ModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] DecoParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] DecoParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] DecoParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] DecoParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] DecoParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] DecoParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] DecoParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] DecoParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] DecoParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] DecoParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.or_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_expr([NotNull] DecoParser.Or_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.or_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_expr([NotNull] DecoParser.Or_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.and_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_expr([NotNull] DecoParser.And_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.and_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_expr([NotNull] DecoParser.And_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.eq_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEq_expr([NotNull] DecoParser.Eq_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.eq_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEq_expr([NotNull] DecoParser.Eq_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.rel_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRel_expr([NotNull] DecoParser.Rel_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.rel_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRel_expr([NotNull] DecoParser.Rel_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.add_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_expr([NotNull] DecoParser.Add_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.add_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_expr([NotNull] DecoParser.Add_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.mul_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMul_expr([NotNull] DecoParser.Mul_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.mul_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMul_expr([NotNull] DecoParser.Mul_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.unary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expr([NotNull] DecoParser.Unary_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.unary_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expr([NotNull] DecoParser.Unary_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary([NotNull] DecoParser.PrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary([NotNull] DecoParser.PrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.variableDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDefinition([NotNull] DecoParser.VariableDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.variableDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDefinition([NotNull] DecoParser.VariableDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] DecoParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] DecoParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] DecoParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] DecoParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn([NotNull] DecoParser.ReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn([NotNull] DecoParser.ReturnContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
