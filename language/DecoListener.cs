//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Deco.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DecoParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IDecoListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] DecoParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] DecoParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifier([NotNull] DecoParser.ModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifier([NotNull] DecoParser.ModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] DecoParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] DecoParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] DecoParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] DecoParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] DecoParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] DecoParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] DecoParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] DecoParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] DecoParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] DecoParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] DecoParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] DecoParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_statement([NotNull] DecoParser.While_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_statement([NotNull] DecoParser.While_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] DecoParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] DecoParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] DecoParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] DecoParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.or_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_expr([NotNull] DecoParser.Or_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.or_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_expr([NotNull] DecoParser.Or_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_expr([NotNull] DecoParser.And_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_expr([NotNull] DecoParser.And_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.eq_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEq_expr([NotNull] DecoParser.Eq_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.eq_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEq_expr([NotNull] DecoParser.Eq_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.rel_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRel_expr([NotNull] DecoParser.Rel_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.rel_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRel_expr([NotNull] DecoParser.Rel_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.add_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_expr([NotNull] DecoParser.Add_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.add_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_expr([NotNull] DecoParser.Add_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.mul_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMul_expr([NotNull] DecoParser.Mul_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.mul_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMul_expr([NotNull] DecoParser.Mul_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expr([NotNull] DecoParser.Unary_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expr([NotNull] DecoParser.Unary_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] DecoParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] DecoParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.variableDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDefinition([NotNull] DecoParser.VariableDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.variableDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDefinition([NotNull] DecoParser.VariableDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] DecoParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] DecoParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DecoParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] DecoParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DecoParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] DecoParser.AssignmentContext context);
}
